TP3

AVANT DE COMMENCER LE TP ON METS EN PLACES LES CHANGEMENTS DANS LA BASE, ON CONSIDERE QU'A CHAQUE REQUETE NOUS AJOUTONS "USE BD;"

INSERT INTO auteur(nom, prenom) VALUES 
('Cohen', 'Albert'),
('Martin', 'Paul');

INSERT INTO editeur(nom, ville) VALUES 
('Nouvel Horizon', 'Toulouse');


EXERCICE 1

1.
SELECT numLivre, titre FROM livre WHERE nombrePages >= (SELECT AVG(nombrePages) FROM livre);
2.
SELECT numLivre FROM livre l, ecrit e, auteur a WHERE l.numLivre = e.numL AND e.numAut = a.numAut AND prenom = 'Chester';
3.
SELECT numLivre FROM livre l, ecrit e, auteur a WHERE l.numLivre = e.numL AND e.numAut = a.numAut AND prenom = 'Chester';
4.
SELECT numE, nom FROM editeur WHERE numE NOT IN (SELECT DISTINCT(e.numE) FROM edite e);
5.
SELECT numAut, nom FROM auteur WHERE numAut NOT IN (SELECT DISTINCT(e.numAut) FROM ecrit e) AND nom LIKE 'C%';
6.
SELECT numLivre, titre FROM livre l, edite e WHERE l.numLivre = e.numL AND e.numE = 0 AND l.numLivre IN (SELECT numL FROM ecrit WHERE numAut != 4);
7.
SELECT numAut FROM ecrit
GROUP BY numAut 
HAVING COUNT(numL) = 
	(SELECT MAX(test) FROM
		(SELECT e.numL, COUNT(*) AS test FROM ecrit e
		GROUP BY e.numAut) 
     	AS tab);

EXERCICE 2

1.
SELECT e.numAut FROM ecrit e, livre l
WHERE l.numLivre = e.numL AND l.anneeImpression = 2003
GROUP BY e.numAut
HAVING e.numAut NOT IN (SELECT e.numAut FROM ecrit e, auteur a 
                        WHERE e.numAut = a.numAut);
2.
SELECT l.numLivre, l.titre, e2.numAut FROM livre l, editeur e, edite e1, ecrit e2
WHERE l.numLivre = e1.numL AND e1.numE = e.numE AND e.nom = 'Gallimard' AND e2.numL = l.numLivre
GROUP BY l.numLivre
HAVING e2.numAut IN (SELECT numAut FROM auteur 
                     WHERE nom != 'Himes' AND prenom != 'Chester');

